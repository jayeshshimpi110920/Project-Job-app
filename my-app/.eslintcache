[{"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\index.js":"1","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\App.js":"3","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\store.js":"4","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\theme.js":"5","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js":"6","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js":"7","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\reducer.js":"8","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js":"9","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx":"10","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx":"11","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js":"12","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js":"13","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js":"14","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js":"15","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx":"16","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx":"17","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx":"18","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx":"19","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx":"20","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\PostJob.jsx":"21","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx":"22","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SavedJobs.jsx":"23","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx":"24","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx":"25","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx":"26","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js":"27","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js":"28","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js":"29","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\timeDifference.js":"30","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js":"31","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actions.js":"32","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actions.js":"33","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\action.js":"34","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Quill.jsx":"35","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx":"36","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx":"37","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx":"38","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx":"39","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx":"40","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx":"41","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx":"42","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx":"43","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\actionType.js":"44","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actionTypes.js":"45","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actionType.js":"46","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js":"47","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Section.jsx":"48","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx":"49","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx":"50","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx":"51","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\floattext.js":"52"},{"size":681,"mtime":1653652755001,"results":"53","hashOfConfig":"54"},{"size":375,"mtime":1653652755004,"results":"55","hashOfConfig":"54"},{"size":563,"mtime":1653722933121,"results":"56","hashOfConfig":"54"},{"size":834,"mtime":1653652754994,"results":"57","hashOfConfig":"54"},{"size":393,"mtime":1653652754999,"results":"58","hashOfConfig":"54"},{"size":1366,"mtime":1653652754993,"results":"59","hashOfConfig":"54"},{"size":850,"mtime":1653652754979,"results":"60","hashOfConfig":"54"},{"size":720,"mtime":1653652754984,"results":"61","hashOfConfig":"54"},{"size":1187,"mtime":1653652754973,"results":"62","hashOfConfig":"54"},{"size":1822,"mtime":1653971898832,"results":"63","hashOfConfig":"54"},{"size":3602,"mtime":1653652754949,"results":"64","hashOfConfig":"54"},{"size":170,"mtime":1653652754977,"results":"65","hashOfConfig":"54"},{"size":154,"mtime":1653652754982,"results":"66","hashOfConfig":"54"},{"size":292,"mtime":1653652754990,"results":"67","hashOfConfig":"54"},{"size":250,"mtime":1653652754972,"results":"68","hashOfConfig":"54"},{"size":453,"mtime":1653652754995,"results":"69","hashOfConfig":"54"},{"size":1099,"mtime":1653652754963,"results":"70","hashOfConfig":"54"},{"size":7233,"mtime":1653652754960,"results":"71","hashOfConfig":"54"},{"size":14999,"mtime":1654062444807,"results":"72","hashOfConfig":"54"},{"size":12823,"mtime":1654067646770,"results":"73","hashOfConfig":"54"},{"size":11468,"mtime":1653652754965,"results":"74","hashOfConfig":"54"},{"size":10600,"mtime":1653997977274,"results":"75","hashOfConfig":"54"},{"size":6393,"mtime":1653652754968,"results":"76","hashOfConfig":"54"},{"size":9788,"mtime":1653652754967,"results":"77","hashOfConfig":"54"},{"size":15659,"mtime":1653984284958,"results":"78","hashOfConfig":"54"},{"size":3127,"mtime":1653652754955,"results":"79","hashOfConfig":"54"},{"size":3305,"mtime":1654058028860,"results":"80","hashOfConfig":"54"},{"size":1794,"mtime":1654005706352,"results":"81","hashOfConfig":"54"},{"size":1417,"mtime":1653652754971,"results":"82","hashOfConfig":"54"},{"size":1850,"mtime":1653652755000,"results":"83","hashOfConfig":"54"},{"size":3099,"mtime":1654066203845,"results":"84","hashOfConfig":"54"},{"size":812,"mtime":1653652754975,"results":"85","hashOfConfig":"54"},{"size":776,"mtime":1654063184475,"results":"86","hashOfConfig":"54"},{"size":855,"mtime":1653652754980,"results":"87","hashOfConfig":"54"},{"size":326,"mtime":1653652754956,"results":"88","hashOfConfig":"54"},{"size":3798,"mtime":1653991827246,"results":"89","hashOfConfig":"54"},{"size":3273,"mtime":1653652754953,"results":"90","hashOfConfig":"54"},{"size":1340,"mtime":1653652754958,"results":"91","hashOfConfig":"54"},{"size":5983,"mtime":1653652754957,"results":"92","hashOfConfig":"54"},{"size":2865,"mtime":1653652754951,"results":"93","hashOfConfig":"54"},{"size":2004,"mtime":1653652754943,"results":"94","hashOfConfig":"54"},{"size":2390,"mtime":1653652754944,"results":"95","hashOfConfig":"54"},{"size":4697,"mtime":1653652754948,"results":"96","hashOfConfig":"54"},{"size":159,"mtime":1653652754981,"results":"97","hashOfConfig":"54"},{"size":160,"mtime":1653652754974,"results":"98","hashOfConfig":"54"},{"size":154,"mtime":1653652754987,"results":"99","hashOfConfig":"54"},{"size":267,"mtime":1653652754998,"results":"100","hashOfConfig":"54"},{"size":2238,"mtime":1653652754959,"results":"101","hashOfConfig":"54"},{"size":802,"mtime":1653652754952,"results":"102","hashOfConfig":"54"},{"size":663,"mtime":1653652754947,"results":"103","hashOfConfig":"54"},{"size":2814,"mtime":1653652754946,"results":"104","hashOfConfig":"54"},{"size":1471,"mtime":1654060899174,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"i7489g",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\index.js",[],["215","216"],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\App.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\store.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\theme.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\reducer.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Routes\\Routes.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Header\\Header.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\actionsConstants.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Routes\\PrivateRoute.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Home.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\AppliedJobs.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Login.jsx",["217"],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\DisplayJobs.jsx",["218"],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\PostJob.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\CompanyReviews.jsx",["219","220","221","222","223","224","225","226"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CompanyBox } from \"../Layout/Companies/CompanyBox\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { searchCompany, getCompanyReviews } from '../../Redux/CompanyReviews/action';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { \r\n    Container,\r\n    makeStyles,\r\n    Grid,\r\n    Typography,\r\n\r\n    Button,\r\n    withStyles,\r\n    InputAdornment,\r\n    TextField,\r\n    FormHelperText\r\n\r\n} from '@material-ui/core';\r\nimport TypeWriter from './floattext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        padding: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\" \r\n    },\r\n    boxSearch: {\r\n        backgroundColor: \"white\",\r\n        margin: 0,\r\n        height: \"220px\",\r\n        // width:\"400px\",\r\n        backgroundSize: \"450px 220px\",\r\n        backgroundPosition: \"bottom right\",\r\n        backgroundImage: \"url(/Images/banner.jpg)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center\" \r\n\r\n    },\r\n    outerSearchGrid: {\r\n        marginTop: \"50px\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"flex-end\"\r\n    },\r\n    h3: {\r\n        fontWeight: \"bold\",\r\n        marginBottom: \"20px\" \r\n    },\r\n    h5: {\r\n        color: \"#6f78a5\",\r\n        fontWeight: \"400\",\r\n        marginBottom: \"70px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"2px solid #cccccc\",\r\n        borderRadius: \"10px\",\r\n        width: \"450px\"\r\n    },\r\n    formhelperText: {\r\n        color: \"#085ff7\",\r\n        paddingLeft: \"20px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    companiesHiring: {\r\n        marginTop: \"50px\",\r\n        marginBottom: \"20px\",\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n    }\r\n}))\r\n\r\nconst SearchButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#085ff7\",\r\n        cursor: \"pointer\",\r\n        width: \"200px\",\r\n        borderRadius: \"200px\",\r\n        height: \"53px\",\r\n        marginLeft: \"50px\",\r\n        '&:hover': {\r\n            backgroundColor: \"#0542ac\",\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport function CompanyReviews() {\r\n\r\n    const classes = useStyles();\r\n    const[companies, setCompanies] = useState([]);\r\n    const[query, setQuery] = useState(\"\");\r\n    const isSearching = useSelector(state => state.companies.isSearching);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n   \r\n    const {isAuth} = useSelector(state=>state.login)\r\n    \r\n\r\n    const onTextChange = (e) => {\r\n        setQuery(e.target.value);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(searchCompany(query))\r\n    }\r\n\r\n    const handleCompanyClick = (id) => {\r\n        dispatch(getCompanyReviews(id));\r\n        history.push(`/reviews?id=${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://indeed-mock-server.herokuapp.com/companies\")\r\n            .then((res) => {\r\n                \r\n                setCompanies(res.data)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    },[])\r\n\r\n    const ftext={\r\n        \r\n            textAlign: \"center\",\r\n            padding: \"5px\",\r\n            fontSize:\"3vw\",\r\n            fontFamily: 'Comfortaa cursive'\r\n            /* font-size: 30px; */\r\n         \r\n    }\r\n\r\n\r\n\r\n     \r\nconst typeWriter = [\"Machine Learning\", \"Java Developer\", \"Data Analyst\", \"iOs Devloper\", \"Software Developer\"];\r\n\r\n\r\n    return (\r\n        isAuth ? ( !isSearching ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            <Grid container className = {classes.boxSearch} >\r\n                {/* <Grid item container className = {classes.outerSearchGrid} xs={12} sm={12} md={9} lg={8} xl={8}>\r\n                    <Grid item>\r\n                        <Typography className = {classes.h3} variant = \"h3\">\r\n                            Find great places to work\r\n                        </Typography>\r\n                        <Typography className = {classes.h5} variant = \"h5\">\r\n                            Discover millions of company reviews\r\n                        </Typography>\r\n                    </Grid>\r\n                    <form onSubmit = {handleSubmit} style = {{display: \"flex\"}}>\r\n                        <Grid item>\r\n                            <TextField  \r\n                                className = {classes.outlinedInput} \r\n                                required \r\n                                type = \"text\" \r\n                                variant=\"outlined\"\r\n                                placeholder = \"Enter a company name\"\r\n                                value = { query }\r\n                                onChange = { onTextChange }\r\n                                InputProps={{\r\n                                    endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                    )\r\n                                    }}\r\n                                />\r\n                            <FormHelperText className = {classes.formhelperText}>Do you want to search for salaries?</FormHelperText>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <SearchButton type = \"submit\" variant = \"contained\">\r\n                                Search\r\n                            </SearchButton>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid> */}\r\n               \r\n\r\n\r\n\r\n            </Grid>\r\n            <div className=\"ftext\" style={ftext}>Inspiring <TypeWriter data={typeWriter} /> </div>\r\n            <div className=\"ftext\" style={ftext}>Jobs for the future !!</div>\r\n\r\n            <Grid className = {classes.companiesHiring} container item xl = {9} lg = {9} md = {9} sm = {11} xs = {12}>\r\n                <Grid item container  >\r\n                    <Grid item>\r\n                        <img src=\"/Images/location.PNG\" alt=\"location pin\" style = {{padding: \"5px 0 5px 10px\"}} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style = {{paddingTop: \"15px\"}} variant = \"h5\">Companies Hiring Now</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{maxWidth:'1000px'}}>\r\n                        {\r\n                            companies.map((item) => {\r\n                                return(\r\n                                    <CompanyBox \r\n                                        key = {item.id}\r\n                                        logo = {item.logo}\r\n                                        name = {item.company}\r\n                                        rating = {item.ratings}\r\n                                        id = {item.id}\r\n                                        handleClick = {handleCompanyClick}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className = {classes.companiesHiring} item container xl = {9} lg = {9} md = {9} sm = {11} xs = {12}>\r\n                <Grid item container  >\r\n                    <Grid item>\r\n                        <img src=\"/Images/popularcompany.PNG\" alt=\"location pin\" style = {{padding: \"5px 0 5px 10px\"}} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography style = {{paddingTop: \"15px\"}} variant = \"h5\">Popular Companies</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{width:'1000px'}}>\r\n                        {\r\n                            companies.map((item) => {\r\n                                return(\r\n                                    <CompanyBox \r\n                                    key = {item.id}\r\n                                    logo = {item.logo}\r\n                                    name = {item.company}\r\n                                    rating = {item.ratings}\r\n                                    id = {item.id}\r\n                                    handleClick = {handleCompanyClick}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className = {classes.companiesHiring} style = {{borderTop: \"10px solid #ff5a1f\", padding: \"25px\", justifyContent: \"space-between\"}} container item xl={9} lg={9} md={9} sm={11} xs={12}>\r\n                <Grid item >\r\n                    <Typography variant = \"h5\">Rate your recent company:</Typography>\r\n                </Grid>\r\n                <Grid item style = {{backgroundColor: \"#f2f2f2\", padding: \"0 5px\", borderRadius: \"50px\"}}>\r\n                    <Rating name=\"pristine\" size = \"large\" style = {{color: \"blue\"}} />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container> : null ) : <Redirect to = \"/review\" />\r\n    )\r\n}","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\SavedJobs.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Review.jsx",["227"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCompanyReviews } from '../../Redux/CompanyReviews/action';\r\nimport axios from \"axios\";\r\nimport { ReviewBox } from \"../Layout/Review/ReviewBox\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { Grid, \r\n    Container,\r\n    makeStyles,\r\n    Typography,\r\n    Button,\r\n    withStyles\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    imgCont: {\r\n        padding: \"5px\",\r\n        borderRadius: \"5px\",\r\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\r\n    },\r\n    optionTab: {\r\n        cursor: \"pointer\",\r\n        margin: \"0 40px 0 40px\",\r\n        '&:hover': {\r\n            borderBottom: \"5px solid #397ff8\",\r\n            fontWeight: \"bold\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst FollowButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#085ff7\",\r\n        cursor: \"pointer\",\r\n        width: \"200px\",\r\n        borderRadius: \"200px\",\r\n        height: \"43px\",\r\n        marginLeft: \"50px\",\r\n        '&:hover': {\r\n            backgroundColor: \"#0542ac\",\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport function Review(props) {\r\n    const classes = useStyle();\r\n    const companyDetails = useSelector(state => state.companies.currentCompany);\r\n    const [reviews, setReviews] = useState([]);\r\n    const query = new URLSearchParams(props.location.search);\r\n    const id =query.get('id')\r\n    const dispatch = useDispatch()\r\n    const {isAuth} = useSelector(state=>state.login)\r\n    useEffect(()=>{\r\n        dispatch(getCompanyReviews(id));\r\n\r\n        axios.get(`https://indeed-mock-server.herokuapp.com/reviews?company_id=${id}`)\r\n            .then((res) => {\r\n                setReviews(res.data)\r\n                \r\n            })\r\n            .catch((err) => console.log(\"Error getting reviews\" + err))\r\n        \r\n    },[])\r\n    return (\r\n\r\n         isAuth ? (companyDetails ?\r\n        <Container maxwidth = \"xl\">\r\n            <Grid container style = {{justifyContent:\"space-between\", alignItems: \"center\", marginBottom: \"40px\"}}>\r\n                <Grid container item lg={6} md={7} sm={8}>\r\n                    <Grid item className = {classes.imgCont} >\r\n                        <img src={companyDetails.logo} alt={companyDetails.company} width=\"100px\" />\r\n                    </Grid>\r\n                    <Grid item style = {{paddingTop: \"40px\", paddingLeft: \"20px\"}}>\r\n                        <Typography variant=\"h5\" >{companyDetails.company}</Typography>\r\n                        <Typography variant=\"h5\" >\r\n                            {companyDetails.ratings}\r\n                            <StarIcon style = {{color: \"#9d2b6b\", paddingRight: \"10px\"}}/>\r\n                            <Typography variant=\"caption\" >{reviews.length} reviews</Typography>\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid  item >\r\n                    <FollowButton>Follow</FollowButton>\r\n                    <br/>\r\n                    <Typography variant=\"caption\" >Get weekly updates, new jobs, and reviews</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style = {{height: \"40px\"}}>\r\n                <Grid item style = {{cursor: \"pointer\", fontWeight: \"bold\", borderBottom: \"5px solid #085ff7\"}}>\r\n                    SnapShot\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    Why Join Us\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {reviews.length} Reviews\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.salaries} Salaries\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.photos} Photos\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.jobs} Jobs\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    {companyDetails.questions} Questions\r\n                </Grid>\r\n                <Grid item className = {classes.optionTab}>\r\n                    Interviews\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item style = {{marginTop: \"20px\", marginBottom: \"30px\"}} >\r\n                <Typography variant = \"caption\" >{companyDetails.company} Careers and Employment</Typography>\r\n            </Grid>\r\n            <Grid item style = {{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                <Typography variant = \"h4\"><b>About the company</b></Typography>\r\n            </Grid>\r\n            <Grid container spacing={3} >\r\n                <Grid item style = {{flex:1}} >\r\n                    <img src={companyDetails.ceo_image} alt={companyDetails.ceo_name} style={{height: \"350px\", borderRadius: \"10px\"}}/>\r\n                </Grid>\r\n                <Grid container item style = {{flex:2, flexDirection: \"column\"}}>\r\n                    <Grid item xl={6} lg={6}  style = {{border: \"2px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            CEO\r\n                        </div>\r\n                        <br/><br/>\r\n                        <div>\r\n                            {companyDetails.ceo_name}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xl={6} lg={6} style = {{border: \"2px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Revenue\r\n                        </div>\r\n                        <br/><br/>\r\n                        <div>\r\n                            {companyDetails.revenue}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item style = {{flex:3, flexDirection: \"column\"}}>\r\n                    <Grid item xl={6} lg={6} style = {{border: \"2px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Founded\r\n                        </div>\r\n                        <br/><br/>\r\n                        <div style = {{}}>\r\n                            {companyDetails.founded_year}\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xl={6} lg={6} style = {{border: \"2px solid #f2f2f2\", borderRadius: \"10px\", padding: \"20px\"}}>\r\n                        <div style = {{fontWeight: \"600\"}}>\r\n                            Company size\r\n                        </div>\r\n                        <br/><br/>\r\n                        <div style = {{}}>\r\n                            more than<br/>\r\n                            {companyDetails.company_size}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style = {{justifyContent: \"center\", padding: \"40px\"}}>\r\n                <Typography variant = \"body2\" style = {{color: \"#767676\", textAlign: \"left\"}}>\r\n                    {companyDetails.description}\r\n                </Typography>\r\n            </Grid>\r\n            <Typography variant = \"h5\" style = {{color: \"#085ff7\", fontWeight: \"600\", cursor: \"pointer\"}}>\r\n                Learn More ＞\r\n            </Typography>\r\n            <Grid item style = {{marginTop: \"30px\", marginBottom: \"50px\"}}>\r\n                <Typography variant = \"h4\"><b>Reviews</b></Typography>\r\n            </Grid>\r\n            <Grid container spacing={10}>\r\n                {\r\n                    reviews.map((item) => {\r\n                        return (\r\n                            <ReviewBox \r\n                                key = {item.id}\r\n                                rating = {item.rating}\r\n                                job_position = {item.job_position}\r\n                                date = {item.date}\r\n                                title = {item.title}\r\n                                description = {item.description}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n\r\n\r\n            <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"50px -20px 0\"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        : <></>) :  <Redirect to=\"/login\" /> \r\n    )\r\n}\r\n","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\Register.jsx",["228","229"],"import React, { useState } from 'react';\r\nimport { Container,Grid,OutlinedInput,Typography , Button} from '@material-ui/core';\r\nimport {  IconButton, Snackbar } from '@material-ui/core';\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { \r\n    Box, \r\n    makeStyles, \r\n    withStyles,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { makeRegisterRequest } from '../../Redux/Register/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        \r\n    },\r\n    boxImg: {\r\n        width: \"450px\",\r\n        display: \"flex\",\r\n        height: \"40px\",\r\n        justifyContent: \"center\",\r\n        margin: \"60px 0 30px\"\r\n    },\r\n    imgLogo: {\r\n        height: \"30px\",\r\n        cursor: \"pointer\"\r\n    },\r\n    boxForm: {\r\n        backgroundColor: \"#ffffff\",\r\n        width: \"450px\",\r\n        padding: \"20px\"\r\n    },\r\n    outlinedInput: {\r\n        border: \"1px solid #cccccc\",\r\n        height: \"48px\",\r\n        width: \"450px\",\r\n        margin: \"7px 0\",\r\n    },\r\n    h5: {\r\n        fontWeight: \"600\"\r\n    },\r\n    formhelperText: {\r\n        fontWeight: \"600\",\r\n        fontSize: \"14px\",\r\n        color: \"#4b4b4b\"\r\n    },\r\n    checkbox: {\r\n        marginBottom: \"10px\"\r\n    },\r\n    button: {\r\n        width: \"450px\",\r\n        borderRadius: \"20px\",\r\n        height: \"40px\"\r\n    },\r\n    divider: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"150px\",\r\n        margin: \"0 30px\"\r\n    },\r\n    pageBreak: {\r\n        backgroundColor: \"#f2f2f2\",\r\n        heigth: \"10px\",\r\n        width: \"440px\",\r\n        margin: \"30px 30px 20px\"\r\n    }\r\n}))\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#085ff7\",\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst SignInButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#ffffff\",\r\n      backgroundColor: \"#085ff7\",\r\n      cursor: \"pointer\",\r\n      '&:hover': {\r\n        backgroundColor: \"#0542ac\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nconst HelperButton = withStyles((theme) => ({\r\n    root: {\r\n        color: \"#000000\",\r\n        backgroundColor: \"#ffffff\",\r\n        cursor: \"pointer\",\r\n        '&:hover': {\r\n        backgroundColor: \"#eeeeee\",\r\n      },\r\n    },\r\n}))(Button);\r\n\r\nexport function Register() {\r\n    const isAuth = useSelector(state=>state.login.isAuth)\r\n    const classes = useStyles();\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const [snackBarOpen,setSnackBarOpen] = useState(false)\r\n    \r\n    const {success,isError,errorMsg} = useSelector(state=>state.register)\r\n    \r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onPasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(makeRegisterRequest({email,password}))\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        !isAuth ?\r\n        <Container className = {classes.container} maxWidth = \"xl\">\r\n            {/* {\r\n                success ? alert('User registered successfully') : <></>\r\n            } */}\r\n            {isError ? \r\n                <Box>\r\n                    {errorMsg}\r\n                </Box> :<></>\r\n            }\r\n            <Box className = {classes.boxImg}>\r\n                <img\r\n                    className = {classes.imgLogo}\r\n                    src = \"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 320 80' focusable='false'%3E%3Cpath d='M287.31 13.4a5.24 5.24 0 0 0-4.22-1.76 5 5 0 0 0-4.22 1.92 9 9 0 0 0-1.49 5.59V37a24.49 24.49 0 0 0-7-5.52 16.88 16.88 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24A18.43 18.43 0 0 0 247.06 36c-3.67 4.23-5.51 10.09-5.51 17.65A33.74 33.74 0 0 0 243 63.6a24 24 0 0 0 4.06 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.14 19.14 0 0 0 3.75-.35 14.73 14.73 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 30.13 30.13 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.66 5.66 0 0 0 8.21.08 7.48 7.48 0 0 0 1.8-5.17V18.48a7.76 7.76 0 0 0-1.72-5.08zm-12.15 49.22a11.56 11.56 0 0 1-4.18 5 10.7 10.7 0 0 1-5.78 1.64 10.45 10.45 0 0 1-5.78-1.72 11.84 11.84 0 0 1-4.18-5.16 20.67 20.67 0 0 1-1.52-8.37 20.86 20.86 0 0 1 1.45-8.14 12 12 0 0 1 4-5.4 9.68 9.68 0 0 1 5.94-1.88h.12a9.93 9.93 0 0 1 5.74 1.84 12.56 12.56 0 0 1 4.22 5.28 19.89 19.89 0 0 1 1.56 8.29 20.36 20.36 0 0 1-1.59 8.62zm-37.9.51a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66A17.22 17.22 0 0 1 205.6 57h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.59-7.74 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.53 1.75 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33 22.39 22.39 0 0 0 6.48-3.32 16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.17-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4H205.6c.4-4.09 1.57-7.29 3.52-9.36zM189 63.13a4.38 4.38 0 0 0-3-1 4 4 0 0 0-2.62.78c-1.52 1.41-2.74 2.54-3.67 3.36a33.69 33.69 0 0 1-3.13 2.31 12.3 12.3 0 0 1-3.44 1.57 14 14 0 0 1-3.95.51 6.6 6.6 0 0 1-.9 0 10.72 10.72 0 0 1-5-1.57 11.55 11.55 0 0 1-4.3-4.66 17.22 17.22 0 0 1-1.64-7.43h23.54c3.17 0 5.65-.34 7.37-1.2s2.62-2.9 2.62-5.91a20.41 20.41 0 0 0-2.54-9.66 19.64 19.64 0 0 0-7.58-7.71 23.28 23.28 0 0 0-12.12-3h-.35a27.4 27.4 0 0 0-9.54 1.72 21.07 21.07 0 0 0-7.54 5 22.48 22.48 0 0 0-4.61 7.86 30.26 30.26 0 0 0-1.6 9.94c0 7.59 2.15 13.54 6.45 18 4.06 4.19 9.69 6.38 16.84 6.61h1.25a27.65 27.65 0 0 0 9-1.33A22.39 22.39 0 0 0 185 74a16 16 0 0 0 3.87-4.23 7.8 7.8 0 0 0 1.29-3.8 3.58 3.58 0 0 0-1.16-2.84zm-28.14-22.4a9.58 9.58 0 0 1 7.39-3.09 9.94 9.94 0 0 1 7.58 3.05c1.91 2 3 5.25 3.32 9.4h-21.8c.39-4.09 1.56-7.29 3.52-9.36zm-21.65-27.17A5.26 5.26 0 0 0 135 11.8a5 5 0 0 0-4.22 1.92c-1.31 1.52-1.65 3.24-1.65 5.7V37.2a23.57 23.57 0 0 0-6.62-5.57 17.21 17.21 0 0 0-5.2-1.56 25.92 25.92 0 0 0-3.6-.24 18.38 18.38 0 0 0-14.54 6.34c-3.63 4.23-5.47 10.1-5.47 17.65a35.11 35.11 0 0 0 1.37 9.94 24.13 24.13 0 0 0 4.1 8 19.15 19.15 0 0 0 6.41 5.24 17.87 17.87 0 0 0 8 1.84 19.72 19.72 0 0 0 3.75-.35 14.67 14.67 0 0 0 2.27-.55 19.32 19.32 0 0 0 5.12-2.66 31.93 31.93 0 0 0 4.81-4.54v1.17a7.52 7.52 0 0 0 1.6 5.13 5.62 5.62 0 0 0 8.17.08 7.53 7.53 0 0 0 1.56-5.2V18.68a7.87 7.87 0 0 0-1.65-5.12zm-11.9 49.22a11.37 11.37 0 0 1-4.22 5 10.57 10.57 0 0 1-5.74 1.64 10.44 10.44 0 0 1-5.78-1.72 11.58 11.58 0 0 1-4.18-5.16 20.68 20.68 0 0 1-1.52-8.37 21.64 21.64 0 0 1 1.41-8.14 12.08 12.08 0 0 1 4.06-5.4 9.57 9.57 0 0 1 5.9-1.88h.16a9.72 9.72 0 0 1 5.6 1.88 12.35 12.35 0 0 1 4.26 5.28 20.52 20.52 0 0 1 1.56 8.29 21 21 0 0 1-1.51 8.58zM26 71.27v-28.8c.82.08 1.6.12 2.42.12A20.27 20.27 0 0 0 39 39.65v31.62c0 2.7-.49 4.7-1.71 6a6.16 6.16 0 0 1-4.77 2 6 6 0 0 1-4.69-2c-1.21-1.33-1.84-3.33-1.84-6zm-.12-69C34-.69 43.28-.53 50.23 5.5a11.79 11.79 0 0 1 3.36 4.5c.7 2.27-2.46-.23-2.89-.55a30.92 30.92 0 0 0-7.07-3.6C29.95 1.66 17 9.29 9 21.15A64.11 64.11 0 0 0 1.61 38a9.59 9.59 0 0 1-.7 2.11c-.35.67-.16-1.8-.16-1.88a52 52 0 0 1 1.41-7.36C5.87 17.94 14.08 7.18 25.88 2.25zm10.59 32A9.92 9.92 0 1 1 40.81 21a9.88 9.88 0 0 1-4.34 13.29zm20.87 2.53v1.5a21.48 21.48 0 0 1 6.9-6.13 18.79 18.79 0 0 1 8.65-1.94 17.35 17.35 0 0 1 8.45 2.06 13 13 0 0 1 5.55 5.82 13.56 13.56 0 0 1 1.55 4.78 48.84 48.84 0 0 1 .35 6.48v22.24A7.92 7.92 0 0 1 87.13 77a5.41 5.41 0 0 1-4.27 1.86A5.48 5.48 0 0 1 78.52 77a7.81 7.81 0 0 1-1.62-5.4V51.7c0-4-.59-7-1.68-9.09s-3.3-3.14-6.55-3.14a9.84 9.84 0 0 0-5.82 1.9A11 11 0 0 0 59 46.65c-.58 1.79-.91 5.09-.91 10v14.96c0 2.45-.52 4.23-1.65 5.47a5.68 5.68 0 0 1-4.34 1.82 5.38 5.38 0 0 1-4.29-1.9 7.82 7.82 0 0 1-1.67-5.4V37c0-2.29.5-4 1.51-5.09a5.1 5.1 0 0 1 4.07-1.71 5.41 5.41 0 0 1 2.83.74 5.29 5.29 0 0 1 2.06 2.25 8 8 0 0 1 .74 3.64z' fill='%232164f3' fill-rule='evenodd'/%3E%3C/svg%3E\"\r\n                    alt = \"Indeed\"\r\n                />\r\n            </Box>\r\n            <Box className = {classes.boxForm}>\r\n                <Grid container spacing = {3} >\r\n                    <Grid item>\r\n                        <Typography className = {classes.h5} variant = \"h5\">Create an Account (it's free)</Typography>\r\n                    </Grid>\r\n                    {/* <Grid container item spacing = {3}>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #a6a6a6\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Google\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid black\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Apple\r\n                            </HelperButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <HelperButton style = {{border: \"2px solid #1877f2\", color: \"#1877f2\"}} className = {classes.button} variant = \"outlined\">\r\n                                Sign in with Facebook\r\n                            </HelperButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid style = {{margin: \"10px 0\"}} container item>\r\n                        <Grid item>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                        <Grid style = {{lineHeight : \"0px\"}} item> or</Grid>\r\n                        <Grid>\r\n                            <hr className = {classes.divider} ></hr>\r\n                        </Grid>\r\n                    </Grid> */}\r\n                    <Grid item>\r\n                        <form onSubmit = { handleSubmit }>\r\n                            <FormHelperText className = {classes.formhelperText}>Email Address</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onEmailChange } value = { email } required type = \"text\" variant=\"outlined\"/>\r\n                            <FormHelperText className = {classes.formhelperText}>Password</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n                            \r\n                            \r\n                            {/* maine dala re-enter pass  */}\r\n                            <FormHelperText className = {classes.formhelperText}>Re-enter Passward</FormHelperText>\r\n                            <OutlinedInput  className = {classes.outlinedInput} onChange = { onPasswordChange } value = { password } required type = \"password\" variant=\"outlined\"/>\r\n\r\n\r\n                            <FormControlLabel className = {classes.checkbox}\r\n                                control = {<GreenCheckbox  />}\r\n                                label = \"Keep me signed in on this device.\"\r\n                            />\r\n                            <br/>\r\n                            <SignInButton type = \"submit\" className = {classes.button} variant = \"contained\">\r\n                                Create Account\r\n                            </SignInButton>\r\n                        </form>\r\n                    </Grid>\r\n                    <hr className = {classes.pageBreak}></hr>\r\n                </Grid>\r\n                {/* <Typography align = \"left\" variant = \"caption\">\r\n                    By creating an account, you agree to Indeed's <Link to=\"/\" style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Terms of Service</Link>, <Link to=\"/\" style = {{textDecoration: \"none\", color: \"#085ff8\"}} href = \"\">Cookie Policy</Link><br/>\r\n                    and <Link to=\"/\" style = {{textDecoration: \"none\", color: \"#085ff8\"}} >Privacy Policy.</Link>. You consent to receiving marketing messages from Indeed <br/> \r\n                    and may opt out from receiving such messages by following the unsubscribe link in our messages, or as detailed in our terms.\r\n                </Typography> */}\r\n            </Box>\r\n            <Grid container spacing = {3} style = {{ flexDirection : \"column\", alignContent: \"center\", margin: \"20px 0\", color: \"#085ff7\"}}>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" component={Link} to=\"/login\" style = {{cursor: \"pointer\",color: \"#085ff7\"}}>\r\n                        Have an account? Sign in\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        Forgot Your Password\r\n                    </Typography>\r\n                </Grid>\r\n                {/* <Grid item>\r\n                    <Typography align = \"center\" variant = \"body2\" style = {{cursor: \"pointer\"}}>\r\n                        HelpCentre\r\n                    </Typography>\r\n                </Grid> */}\r\n            </Grid>\r\n            {/* <Grid container spacing = {1} style = {{fontSize : \"14px\", backgroundColor: \"white\", padding: \"15px 10px\", margin : \"0 -20px \"}} >\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                © 2020 Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Accessibility at Indeed\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy Center\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Cookies\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Privacy\r\n                </Grid>\r\n                <Grid item>\r\n                    -\r\n                </Grid>\r\n                <Grid item style = {{cursor: \"pointer\"}}>\r\n                    Terms\r\n                </Grid> \r\n            </Grid> */}\r\n            <Snackbar\r\n                anchorOrigin={{vertical:'top',horizontal:'left'}}\r\n                open={snackBarOpen}\r\n                autoHideDuration={3000}\r\n                message={<span className=\"format__id\">Regitered Succesfully</span>}\r\n                ContentProps={{\r\n                    'aria-describedby':'message-id'\r\n                }}\r\n                onClose={()=>setSnackBarOpen(false)}\r\n                action={[\r\n                    <IconButton\r\n                    onClick={()=>{setSnackBarOpen(false)}}\r\n                    color=\"inherit\"\r\n                    key=\"close\"\r\n                    aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                ]} />\r\n        </Container> : <Redirect to=\"/\" />\r\n    )\r\n}","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\UserMenu.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Register\\actions.js",["230"],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Login\\actions.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\CompanyReviews\\action.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\timeDifference.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\Search\\actions.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actions.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actions.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\action.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Quill.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Menu\\JobMenu.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobDescription.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Review\\ReviewBox.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\RecentSearch.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\ApplyModal.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Companies\\CompanyBox.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\FilterJobsButton\\FillterButton.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\SearchForm.jsx",["231"],"import {  Box, Button, Grid} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputGrid from './InputGrid';\r\nimport { getSearchData, setCurrentPage } from '../../../../Redux/Search/actions';\r\nimport { loadData, saveData } from '../../../../Utils/localStorage';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n   \r\n    input:{\r\n        width:'100%',\r\n        height:'45px',\r\n        \r\n    },\r\n    removeMargin:{\r\n        margin:'0'\r\n    },\r\n    searchForm:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    btn_Container:{\r\n        display:'flex',\r\n        alignItems:'flex-end',\r\n        \r\n        '& button':{\r\n            width:'100%',\r\n            height:\"45px\",\r\n            fontSize:'13px',\r\n            fontWeight:'bold',\r\n            borderRadius:'10px'\r\n        }\r\n    },\r\n    suggestionInput:{\r\n        position:'relative'\r\n    },\r\n    autocontainer:{\r\n        border:`1px solid ${theme.palette.primary.main}`,\r\n        width:'99%',\r\n        backgroundColor:\"white\",\r\n        borderBottomLeftRadius:'5px',\r\n        borderBottomRightRadius:'5px',\r\n        zIndex:'10',\r\n        paddingBottom:'30px',\r\n        position:'absolute',\r\n        '& div':{\r\n            marginTop:'30px'\r\n        },\r\n        \r\n    },\r\n  }))\r\n\r\nfunction SearchForm(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const classes = useStyles();\r\n    const [job,setJob] = useState('');\r\n    const [location,setLocation] = useState('');\r\n    const jobOptions = ['Java Developer','Javascript Developer','React Developer','Government','Account']\r\n    const locationOptions = ['Bangalore','Mumbai','Delhi','Kolkata','Chennai'];\r\n    const history = useHistory()\r\n    const [error,setError] = useState(false);\r\n    \r\n\r\n    const handleSearch=e=>{\r\n        \r\n        e.preventDefault()\r\n        if(job === \"\" && location === \"\"){\r\n            setError(true)\r\n            return\r\n        }\r\n        dispatch(setCurrentPage(1))\r\n        dispatch(getSearchData(job === \"\"?\"\":job,location=== \"\" ? \"\" : location))\r\n        \r\n        let data = loadData(\"recent\") || []\r\n        let str = job !== \"\" && location !== \"\" ? {category:\"both\" , query: `${job} - ${location}`} : job === \"\" && location !== \"\" ? {category:\"location\", query:`${location}`} : {category:\"job\",query:`${job}`}\r\n\r\n        if(data.length === 4){\r\n            data.reverse()\r\n            if(data.some(item=>item.category===str.category && item.query === str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                data.shift()\r\n                data.push(str)\r\n            }\r\n            \r\n        }\r\n        else {\r\n            if(data.some(item=>item.category===str.category && item.query===str.query)){\r\n                data = data.filter(item=>item.category !== str.category || item.query !== str.query)\r\n                data.push(str)\r\n            }\r\n            else{\r\n                \r\n                data.push(str)\r\n            }\r\n        }\r\n\r\n        saveData(\"recent\",data.reverse())\r\n        history.push(`/jobs?q=${job}&location=${location}&page=1`)\r\n\r\n        // console.log(str,\"str\")\r\n\r\n    }\r\n\r\n\r\n\r\n    // const handelSubmit = (e)=>{\r\n    //     e.preventDefault();\r\n    //     history.push(`/jobs/q=${job}&l=${location}`)\r\n    // }\r\n    return (\r\n        <>\r\n           { error ? <Box>Query is Empty</Box> : <></> }\r\n            <form  onSubmit={handleSearch} className={classes.searchForm}>\r\n                <Grid container spacing={1}>\r\n                    \r\n                    <InputGrid setValue={setJob} value={job} label={'What?'} \r\n                    helperText={'City, state, or pin code'} classes={classes}\r\n                    options={job !== \"\" ?jobOptions:null}\r\n                    setError = {setError}\r\n                    />\r\n\r\n                    <InputGrid setError = {setError} setValue={setLocation} value={location} label={'Where'}\r\n                    helperText='City, state, or pin code' classes={classes}\r\n                    options={locationOptions} />\r\n\r\n                    <Grid item lg={2} md={2} sm={2} xs={12} className={classes.btn_Container}>\r\n                        <Button color={'primary'} variant='contained' type='submit'>\r\n                            Find Jobs\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n       </>\r\n           \r\n        \r\n    );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\PostJob\\actionType.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\JobApply\\actionTypes.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Redux\\SaveJob\\actionType.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Utils\\localStorage.js",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Section.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\JobApplyModal\\UploadForm.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\InputGrid.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Layout\\Forms\\SearchForm\\Input.jsx",[],"C:\\Users\\rudra\\Desktop\\Final Project\\new\\indeed\\IndeedReactClone\\my-app\\src\\Components\\Pages\\floattext.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":102,"column":7,"nodeType":"238","messageId":"239","endLine":102,"endColumn":19},{"ruleId":"240","severity":1,"message":"241","line":234,"column":7,"nodeType":"242","endLine":234,"endColumn":26,"suggestions":"243"},{"ruleId":"236","severity":1,"message":"244","line":8,"column":8,"nodeType":"238","messageId":"239","endLine":8,"endColumn":18},{"ruleId":"236","severity":1,"message":"245","line":18,"column":5,"nodeType":"238","messageId":"239","endLine":18,"endColumn":19},{"ruleId":"236","severity":1,"message":"246","line":19,"column":5,"nodeType":"238","messageId":"239","endLine":19,"endColumn":14},{"ruleId":"236","severity":1,"message":"247","line":20,"column":5,"nodeType":"238","messageId":"239","endLine":20,"endColumn":19},{"ruleId":"248","severity":1,"message":"249","line":42,"column":9,"nodeType":"250","messageId":"251","endLine":42,"endColumn":27},{"ruleId":"236","severity":1,"message":"252","line":77,"column":7,"nodeType":"238","messageId":"239","endLine":77,"endColumn":19},{"ruleId":"236","severity":1,"message":"253","line":104,"column":11,"nodeType":"238","messageId":"239","endLine":104,"endColumn":23},{"ruleId":"236","severity":1,"message":"254","line":109,"column":11,"nodeType":"238","messageId":"239","endLine":109,"endColumn":23},{"ruleId":"240","severity":1,"message":"255","line":65,"column":7,"nodeType":"242","endLine":65,"endColumn":9,"suggestions":"256"},{"ruleId":"236","severity":1,"message":"237","line":96,"column":7,"nodeType":"238","messageId":"239","endLine":96,"endColumn":19},{"ruleId":"236","severity":1,"message":"257","line":115,"column":12,"nodeType":"238","messageId":"239","endLine":115,"endColumn":19},{"ruleId":"236","severity":1,"message":"258","line":63,"column":7,"nodeType":"238","messageId":"239","endLine":63,"endColumn":10},{"ruleId":"236","severity":1,"message":"259","line":3,"column":22,"nodeType":"238","messageId":"239","endLine":3,"endColumn":33},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'HelperButton' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["262"],"'SearchIcon' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundPosition'.","ObjectExpression","unexpected","'SearchButton' is assigned a value but never used.","'onTextChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["263"],"'success' is assigned a value but never used.","'obj' is assigned a value but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [dispatch, job, location, page]",{"range":"268","text":"269"},"Update the dependencies array to be: [dispatch, id]",{"range":"270","text":"271"},[6326,6345],"[dispatch, job, location, page]",[1992,1994],"[dispatch, id]"]